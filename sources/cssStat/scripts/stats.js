var request = new XMLHttpRequest();
request.open('GET', 'statsData.json', true);

request.onload = function() {
  if (request.status >= 200 && request.status < 400) {
    // Success!
    var data = JSON.parse(request.responseText);
    console.log("data= ", data);
    // create graphs with the received data
    createGraphs(data);
  } else {
    // We reached our target server, but it returned an error
    console.log("ressources error");
  }
};
request.onerror = function() {
  // There was a connection error of some sort
  console.log("connection error");
};

request.send();



/**
* @name createGraphs
* @function
*
* @param stats JSON - JSON generated by cssstat
* @return
*
* @description: Start the process to create the graphs for specificityGraph, rulesizeGraph, uniquesGraph
*
*/
function createGraphs (stats) {
    var _ = require('../../scripts/thirdparty/underscore.min.js');

    // Need to transform raw data in array of object key/value
    var sG = stats.specificityGraph,
        NewsG = [];
    _.each( sG, function(obj, index){
        var firstDate = new Date();
        var newDate = new Date(firstDate);
        newDate.setDate(newDate.getDate() + index);

        NewsG.push({date: newDate, value: obj});
    });


    var rzG = stats.rulesizeGraph,
        NewrzG = [];

    _.each( rzG, function(obj, index){
        var firstDate = new Date();
        var newDate = new Date(firstDate);
        newDate.setDate(newDate.getDate() + index);

        NewrzG.push({date: newDate, value: obj});
    });

    var uG = stats.uniquesGraph,
        NewuG = [];

    Object.getOwnPropertyNames(uG).forEach(function(val) {
        if(val != "max"){
            NewuG.push( { property: val, total: uG[val].total, unique: uG[val].unique });
        }
    });


    var specificityGraphData = {
        "type": "serial",
        "categoryField": "date",
        "autoMarginOffset": 40,
        "marginRight": 60,
        "marginTop": 60,
        "startDuration": 1,
        "fontSize": 13,
        "categoryAxis": {
            "gridPosition": "start",
            "color": "#FFF"
        },
        "graphs": [
            {
                "bullet": "none",
                "id": "AmGraph-1",
                "lineAlpha": 1,
                "lineThickness": 1,
                "title": "specificityGraphData",
                "type": "smoothedLine",
                "valueField": "value"
            }
        ],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "title": ""
            }
        ],
        "dataProvider": NewsG
    };

    var rulesizeGraphData = {
        "type": "serial",
        "categoryField": "date",
        "autoMarginOffset": 40,
        "marginRight": 60,
        "marginTop": 60,
        "startDuration": 1,
        "fontSize": 13,
        "categoryAxis": {
            "gridPosition": "start",
            "color": "#FFF"
        },
        "graphs": [
            {
                "bullet": "none",
                "id": "AmGraph-2",
                "lineAlpha": 1,
                "lineThickness": 1,
                "title": "rulesizeGraphData",
                "type": "smoothedLine",
                "valueField": "value"
            }
        ],
        "valueAxes": [
            {
                "id": "ValueAxis-2",
                "title": ""
            }
        ],
        "dataProvider": NewrzG
    };

    var uniqueGraphData = {
        "type": "serial",
        "categoryField": "property",
        "autoMarginOffset": 40,
        "marginRight": 60,
        "marginTop": 60,
        "startDuration": 1,
        "fontSize": 13,
        "categoryAxis": {
            "gridPosition": "start"
        },
        "graphs": [
            {
                "balloonText": "[[title]] of [[category]] property ([[value]])",
                "id": "AmGraph-3",
                "lineAlpha": 1,
                "lineThickness": 1,
                "fillAlphas": 0.9,
                "title": "Total",
                "type": "column",
                "valueField": "total"
            },
            {
                "balloonText": "[[title]] [[category]] property ([[value]])",
                "id": "AmGraph-4",
                "lineAlpha": 1,
                "lineThickness": 1,
                "fillAlphas": 0.9,
                "title": "Unique",
                "type": "column",
                "valueField": "unique"
            }
        ],
        "valueAxes": [
            {
                "id": "ValueAxis-2",
                "title": ""
            }
        ],
        "dataProvider": NewuG
    };


    AmCharts.makeChart("chartdiv-unique-graph", uniqueGraphData);
    AmCharts.makeChart("chartdiv-specificity-graph", specificityGraphData);
    AmCharts.makeChart("chartdiv-rulesize-graph", rulesizeGraphData);
    return;
};
