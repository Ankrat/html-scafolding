var request = new XMLHttpRequest();
request.open('GET', 'statsData.json', true);

request.onload = function() {
  if (request.status >= 200 && request.status < 400) {
    // Success!
    var data = JSON.parse(request.responseText);
    console.log("data= ", data);
    // create graphs with the received data
    createGraphs(data);
  } else {
    // We reached our target server, but it returned an error
    console.log("ressources error");
  }
};
request.onerror = function() {
  // There was a connection error of some sort
  console.log("connection error");
};

request.send();


/**
* @name createGraphs
* @function
*
* @param stats JSON - JSON generated by cssstat
* @return
*
* @description: Start the process to create the graphs for specificityGraph, rulesizeGraph, uniquesGraph
*
*/
function createGraphs (stats) {
    // Need to transform raw data in array of object key/value
    // by prepanding "value"  => need underscore lib...
    console.log("stats.specificityGraph => ", stats.specificityGraph);
    console.log("stats.rulesizeGraph => ", stats.rulesizeGraph);

    var specificityGraphData = {
        "type": "serial",
        "categoryField": "",
        "autoMarginOffset": 40,
        "marginRight": 60,
        "marginTop": 60,
        "startDuration": 1,
        "fontSize": 13,
        "theme": "patterns",
        "categoryAxis": {
            "gridPosition": "start"
        },
        "trendLines": [],
        "graphs": [
            {
                "bullet": "round",
                "bulletSize": 10,
                "id": "AmGraph-1",
                "lineAlpha": 1,
                "lineThickness": 3,
                "title": "specificityGraphData",
                "type": "smoothedLine"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "title": ""
            }
        ],
        "allLabels": [],
        "balloon": {},
        "titles": [],
        "dataProvider": stats.specificityGraph
    };

    var rulesizeGraphData = {
        "type": "serial",
        "categoryField": "",
        "autoMarginOffset": 40,
        "marginRight": 60,
        "marginTop": 60,
        "startDuration": 1,
        "fontSize": 13,
        "theme": "patterns",
        "categoryAxis": {
            "gridPosition": "start"
        },
        "trendLines": [],
        "graphs": [
            {
                "bullet": "round",
                "bulletSize": 10,
                "id": "AmGraph-2",
                "lineAlpha": 1,
                "lineThickness": 3,
                "title": "rulesizeGraphData",
                "type": "smoothedLine"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-2",
                "title": ""
            }
        ],
        "allLabels": [],
        "balloon": {},
        "titles": [],
        "dataProvider": stats.rulesizeGraph

    };



    AmCharts.makeChart("chartdiv-specificity-graph", specificityGraphData);
    AmCharts.makeChart("chartdiv-rulesize-graph", rulesizeGraphData);
    return;
};
